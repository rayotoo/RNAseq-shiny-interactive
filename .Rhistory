library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw() + # A clean and common publication theme
theme(
axis.text.y = element_text(size = 10, angle = 0, hjust = 1),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5) # Optional title
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, width = 8, height = 6, units = "in", dpi = 300)
ggsave("Publication_Ready_GO_Bar_Graph.pdf", plot = p, width = 8, height = 6, units = "in")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw() + # A clean and common publication theme
theme(
axis.text.y = element_text(size = 10, angle = 0, hjust = 1),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5) # Optional title
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Display the plot
print(p)
# Save the plot with increased height
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, width = 8, height = 8, units = "in", dpi = 300)
ggsave("Publication_Ready_GO_Bar_Graph.pdf", plot = p, width = 8, height = 8, units = "in")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw() + # A clean and common publication theme
theme(
axis.text.y = element_text(size = 10, angle = 0, hjust = 1),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5) # Optional title
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Adjust y-axis limits - USE WITH CAUTION
p <- p + ylim(0, max(combined_results$Count) * 1.1)
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution with increased height
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, width = 8, height = 8, units = "in", dpi = 300)
ggsave("Publication_Ready_GO_Bar_Graph.pdf", plot = p, width = 8, height = 8, units = "in")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw() + # A clean and common publication theme
theme(
axis.text.y = element_text(size = 10, angle = 0, hjust = 1),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5) # Optional title
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Adjust y-axis limits - USE WITH CAUTION
p <- p + ylim(0, max(combined_results$Count) * 1.1)
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution with increased height
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, , plot = p, width = 16, height = 10)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw() + # A clean and common publication theme
theme(
axis.text.y = element_text(size = 10, angle = 0, hjust = 1),
axis.text.x = element_text(size = 10),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12),
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5) # Optional title
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Adjust y-axis limits - USE WITH CAUTION
p <- p + ylim(0, max(combined_results$Count) * 1.1)
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution with increased height
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, width = 16, height = 10)
ggsave("Publication_Ready_GO_Bar_Graph.pdf", plot = p, width = 16, height = 10)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw(base_size = 14) + # Increase base font size for overall text
theme(
axis.text.y = element_text(size = 12, angle = 0, hjust = 1), # Adjust y-axis text size
axis.text.x = element_text(size = 12), # Adjust x-axis text size
axis.title.x = element_text(size = 14), # Adjust x-axis title size
axis.title.y = element_text(size = 14), # Adjust y-axis title size
legend.text = element_text(size = 12), # Adjust legend text size
legend.title = element_text(size = 14), # Adjust legend title size
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5) # Optional title size
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution with adjusted dimensions
ggsave("Publication_Ready_GO_Bar_Graph_LargeText.png", plot = p, width = 10, height = 8, units = "in", dpi = 300)
ggsave("Publication_Ready_GO_Bar_Graph_LargeText.pdf", plot = p, width = 10, height = 8, units = "in")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw(base_size = 14) + # Increase base font size for overall text
theme(
axis.text.y = element_text(size = 12, angle = 0, hjust = 1), # Adjust y-axis text size
axis.text.x = element_text(size = 12), # Adjust x-axis text size
axis.title.x = element_text(size = 14), # Adjust x-axis title size
axis.title.y = element_text(size = 14), # Adjust y-axis title size
legend.text = element_text(size = 12), # Adjust legend text size
legend.title = element_text(size = 14), # Adjust legend title size
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5) # Optional title size
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution with increased height
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, width = 16, height = 10)
ggsave("Publication_Ready_GO_Bar_Graph.pdf", plot = p, width = 16, height = 10)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw(base_size = 18) + # Increase base font size for overall text
theme(
axis.text.y = element_text(size = 12, angle = 0, hjust = 1), # Adjust y-axis text size
axis.text.x = element_text(size = 12), # Adjust x-axis text size
axis.title.x = element_text(size = 14), # Adjust x-axis title size
axis.title.y = element_text(size = 14), # Adjust y-axis title size
legend.text = element_text(size = 12), # Adjust legend text size
legend.title = element_text(size = 14), # Adjust legend title size
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5) # Optional title size
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution with increased height
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, width = 16, height = 10)
ggsave("Publication_Ready_GO_Bar_Graph.pdf", plot = p, width = 16, height = 10)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(ggthemes) # For publication-ready themes
# Read the files
cc_results <- read.csv("GO_Cellular_Components_Results.csv")
mf_results <- read.csv("GO_Molecular_Functions_Results.csv")
bp_results <- read.csv("GO_Biological_Processes_Results.csv")
# Select the top N rows (adjust N for your needs)
top_n <- 10
cc_results <- cc_results %>% slice(1:top_n) %>%
mutate(Class = "Cellular Components",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
mf_results <- mf_results %>% slice(1:top_n) %>%
mutate(Class = "Molecular Functions",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
bp_results <- bp_results %>% slice(1:top_n) %>%
mutate(Class = "Biological Processes",
Plot_Label = paste(Description, " (", ID, ")", sep = ""))
# Combine the dataframes
combined_results <- bind_rows(cc_results, mf_results, bp_results)
# Ensure Plot_Label is a factor ordered by Class and Count (for better visual grouping)
combined_results <- combined_results %>%
mutate(Plot_Label = factor(Plot_Label,
levels = unique(Plot_Label[order(Class, -Count)])))
# Define publication-ready colors (using ggthemes)
publication_colors <- ggthemes::tableau_color_pal("Tableau 10")(3) # Using "Tableau 10"
names(publication_colors) <- c("Cellular Components", "Molecular Functions", "Biological Processes")
# Create the publication-ready bar plot
p <- ggplot(combined_results, aes(x = Plot_Label, y = Count, fill = Class)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "GO Terms", y = "Gene Count", fill = "GO Category") + # More informative labels
theme_bw(base_size = 18) + # Increase base font size for overall text
theme(
axis.text.y = element_text(size = 14, angle = 0, hjust = 1), # Adjust y-axis text size
axis.text.x = element_text(size = 14), # Adjust x-axis text size
axis.title.x = element_text(size = 16), # Adjust x-axis title size
axis.title.y = element_text(size = 16), # Adjust y-axis title size
legend.text = element_text(size = 14), # Adjust legend text size
legend.title = element_text(size = 16), # Adjust legend title size
panel.grid.major.y = element_blank(), # Remove horizontal grid lines for cleaner look
panel.grid.minor.y = element_blank(),
plot.title = element_text(size = 16, face = "bold", hjust = 0.5) # Optional title size
) +
scale_fill_manual(values = publication_colors) # Use publication-ready colors
# Optional: Add a title to the plot
# p <- p + ggtitle(paste("Top", top_n, "Enriched GO Terms by Category"))
# Display the plot
print(p)
# Save the plot in a publication-ready format and resolution with increased height
ggsave("Publication_Ready_GO_Bar_Graph.png", plot = p, width = 16, height = 10)
ggsave("Publication_Ready_GO_Bar_Graph.pdf", plot = p, width = 16, height = 10)
shiny::runApp('Desktop/rna_seq_shiny_app/app.R')
runApp('Desktop/rna_seq_shiny_app/app.R')
runApp('Desktop/ProteoRay app/ProteoRay')
runApp('Library/CloudStorage/OneDrive-UniversityofArkansasforMedicalSciences/Bioinformatics Course/Bioinformatics course/BioinformaticsCourse')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp()
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
runApp('Desktop/rna_seq_shiny_app')
